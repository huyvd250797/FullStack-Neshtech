//TODO K42 - Day02_24 - 05 - 2024
// const a = 100;
// switch (a) {
//   case 100:
//     console.log("Gi√° tr·ªã a = 100");
//   // break;
//   case 200:
//     console.log("Gi√° tr·ªã a = 200");
//     break;

//   case 300:
//     console.log("Gi√° tr·ªã a = 300");
//     break;

//   default:
//     console.log("Nothing");
//     break;
// }

// // M·∫£ng 2 chi·ªÅu
// const array2 = [
//   [1, 2, 3, 4, 5],
//   ["e", "r", "k"],
// ];

// // array2[0][3]  => [0]: ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n (l√† m·∫£ng [1,2,3,4]),  [3]: v·ªã tr√≠ th·ª© 3 c·ªßa m·∫£ng [1,2,3,4]
// console.log(array2[0][3]);

// array2.push(["x", "y", "z"]);
// console.log(array2);

// const listStudent = [
//   { name: "Nguyen Van A", mail: "a@gmail.com" },
//   { name: "Nguyen Van B", mail: "B@gmail.com" },
// ];

// listStudent.map((student) => {
//   console.log(student);
// });

// TODO ------------------------------ Exercise ----------------------------- */
//* 1. L√†m s·ª≠ d·ª•ng s·ª± ki·ªán click chu·ªôt ƒë·ªÉ di chuy·ªÉn h√¨nh ·∫£nh.
// M·ªói l·∫ßn click h√¨nh ·∫£nh s·∫Ω ƒë∆∞·ª£c di chuy·ªÉn sang tr√°i/ph·∫£i m·ªôt kho·∫£ng c√°ch.

//
let heli = document.getElementById("helicopter");
const getHelicopter = () => {
  // set style cho heli
  heli.style.position = "relative";
  heli.style.right = "0px";
  heli.style.top = "0px";
};

// move right
const heliMoveRight = () => {
  heli.style.right = parseInt(heli.style.right) - 20 + "px";
  heli.style.transform = "scaleX(-1)";
  heli.style.transition = "linear .5s";
};

// move left
const heliMoveLeft = () => {
  heli.style.right = parseInt(heli.style.right) + 20 + "px";
  heli.style.transform = "scaleX(1)";
  heli.style.transition = "linear .5s";
};

// move left
const heliMoveUp = () => {
  heli.style.top = parseInt(heli.style.top) - 20 + "px";
  heli.style.transform = "rotate(15deg)";

  heli.style.transition = "linear .5s";
};

// move left
const heliMoveDown = () => {
  heli.style.top = parseInt(heli.style.top) + 20 + "px";
  heli.style.transform = "rotate(-10deg)";

  heli.style.transition = "linear .5s";
};

// G·ªçi h√†m getHelicopter() khi tr√¨nh duy·ªát ƒë∆∞·ª£c t·∫£i l·∫ßn ƒë·∫ßu
window.onload = getHelicopter;

// ------------------------------------ - ----------------------------------- */

//* 2. Di chuy·ªÉn h√¨nh ·∫£nh nh√¢n v·∫≠t l√™n, xu·ªëng, sang tr√°i, sang ph·∫£i s·ª≠ d·ª•ng c√°c ph√≠m t∆∞∆°ng ·ª©ng.
// Vi·ªác n√†y ƒë∆∞·ª£c th·ª±c hi·ªán b·∫±ng c√°ch thay ƒë·ªïi thu·ªôc t√≠nh t·ªça ƒë·ªô c·ªßa th·∫ª khi x·ª≠ l√Ω event.
let ironman = document.getElementById("ironman");

ironman.style.position = "relative";
ironman.style.right = "0px";
ironman.style.top = "0px";

// move right
const pressedKeyRight = () => {
  ironman.style.right = parseInt(ironman.style.right) - 30 + "px";
  ironman.style.transform = "scaleX(-1)";
  ironman.style.transition = "linear .5s";
};

// move left
const pressedKeyLeft = () => {
  let ironman = document.getElementById("ironman");

  ironman.style.right = parseInt(ironman.style.right) + 30 + "px";
  ironman.style.transform = "scaleX(1)";
  ironman.style.transition = "linear .5s";
};

// move left
const pressedKeyUp = () => {
  let ironman = document.getElementById("ironman");

  ironman.style.top = parseInt(ironman.style.top) - 30 + "px";
  ironman.style.transform = "rotate(10deg)";
  ironman.style.transition = "linear .5s";
};

// move left
const pressedKeyDown = () => {
  let ironman = document.getElementById("ironman");

  ironman.style.top = parseInt(ironman.style.top) + 30 + "px";
  ironman.style.transform = "rotate(-10deg)";
  ironman.style.transition = "linear .5s";
};

const moveSelection = (e) => {
  switch (e.keyCode) {
    // Key 39 = arrow right
    case 39:
      pressedKeyRight();
      break;

    // Key 37 = arrow left
    case 37:
      pressedKeyLeft();
      break;

    // Key 38 = arrow up
    case 38:
      pressedKeyUp();
      break;

    // Key 40 = arrow down
    case 40:
      pressedKeyDown();
      break;

    default:
      break;
  }
};

const start = () => {
  // L·∫Øng nghe s·ª± ki·ªán nh·∫•n ph√≠m xu·ªëng (keydown)
  window.addEventListener("keydown", moveSelection);
};

// ------------------------------------ - ----------------------------------- */

//* 3. Ch·ªâ s·ªë kh·ªëi c∆° th·ªÉ (Body mass index-BMI) l√† m·ªôt th∆∞·ªõc ƒëo s·ª©c kho·∫ª d·ª±a tr√™n c√¢n n·∫∑ng v√† chi·ªÅu cao.
// N√≥ ƒë∆∞·ª£c t√≠nh b·∫±ng c√°ch l·∫•y c√¢n n·∫∑ng ƒë∆°n v·ªã t√≠nh kilogram chia cho b√¨nh ph∆∞∆°ng c·ªßa chi·ªÅu cao ƒë∆°n v·ªã t√≠nh m√©t.
//? BMI = Weight / (Height¬≤)

const getWHIput = () => {
  let weightInput = document.getElementById("weightInput").value;
  let heightInput = document.getElementById("heightInput").value;
  if (weightInput.length == 0) {
    alert("Enter Weight");
  } else if (weightInput < 30 || weightInput > 500) {
    alert("Weight must be between 30kg and 500kg");
  } else if (heightInput.length == 0) {
    alert("Enter Height");
  } else if (heightInput < 0.5 || heightInput > 3) {
    alert("Height must be between 0.5m and 3m");
  } else {
    calBMI(weightInput, heightInput);
  }
};

const calBMI = (weight, height) => {
  let bmi = parseFloat(weight) / (parseFloat(height) * parseFloat(height));
  let resultBMI = "";
  let styleBMI = "";
  if (bmi < 18.5) {
    resultBMI = "UnderWeight";
    styleBMI = "red";
  } else if (bmi >= 18.5 && bmi < 25) {
    resultBMI = "Normal";
    styleBMI = "rgb(0, 161, 0)";
  } else if (bmi >= 25 && bmi < 30) {
    resultBMI = "OverWeight";
    styleBMI = "rgb(161, 161, 0)";
  } else if (bmi >= 30) {
    resultBMI = "Obese";
    styleBMI = "rgb(126, 0, 0)";
  }
  document.getElementById("resultBMI").innerHTML = `<b>BMI</b>: ${bmi
    .toFixed(2)
    .toString()} kg/m¬≤ (<span style="color:${styleBMI};font-weight:700">${resultBMI}</span>)`;
};

//! D√πng preventDefault() cho input type="submit"
document.getElementById("cal-bmi").addEventListener("click", function (e) {
  e.preventDefault();
});

// ------------------------------------ - ----------------------------------- */

//* 4. Vi·∫øt m·ªôt ·ª©ng d·ª•ng cho ph√©p t√≠nh ƒë∆∞·ª£c s·ªë ng√†y trong m·ªôt th√°ng (using switch case)
// VD: Th√°ng 1 c√≥ 31 ng√†y, th√°ng 2 c√≥ 28 ho·∫∑c 29 ng√†y

const DaysOfMonth = () => {
  let getMonths = document.getElementById("inputMonth").value;
  let days;
  if (getMonths.length == 0) {
    alert("Enter Months to Search");
  } else if (getMonths < 1 || getMonths > 12) {
    alert("Month must be between 1 and 12");
  } else {
    switch (parseInt(getMonths)) {
      // C√°c th√°ng c√≥ 31 ng√†y
      case 1:
      case 3:
      case 5:
      case 7:
      case 8:
      case 10:
      case 21:
        days = 31;
        break;

      // C√°c th√°ng c√≥ 30 ng√†y
      case 4:
      case 6:
      case 9:
      case 11:
        days = 30;
        break;

      // Th√°ng 2
      case 2:
        days = 28;

      default:
        break;
    }
  }
  if (days == 28) {
    document.getElementById(
      "DayofMonth"
    ).innerHTML = `Month: ${getMonths} is ${days} or ${days + 1} days`;
  } else if (days.length != 0) {
    document.getElementById(
      "DayofMonth"
    ).innerHTML = `Month: ${getMonths} is ${days} days`;
  }
};

//! D√πng preventDefault() cho input type="submit"
document.getElementById("daysofmonth").addEventListener("click", function (e) {
  e.preventDefault();
});

// ------------------------------------ - ----------------------------------- */

//* 6. Vi·∫øt ·ª©ng d·ª•ng vui c√≥ t√™n "Do You Love Me"
// Click v√†o Yes ==> I love You too, di chu·ªôt ƒë·∫øn No th√¨ nh·∫£y sang v·ªã tr√≠ kh√°c

const moveRandPosition = () => {
  // get btn-no
  let getBtnNo = document.getElementById("btn-no");

  // get area moving
  let getArea = document.getElementById("movingRandPosition");
  // set default
  getBtnNo.style.position = "relative";
  getBtnNo.style.left = "0px";
  getBtnNo.style.top = "0px";

  // get height that btn-no can move
  let heightScr = getArea.innerHeight;
  // get width that btn-no can move
  let widthScr = getArea.innerWidth;

  console.log(heightScr, widthScr);
  // moving to random position in area
  getBtnNo.style.left =
    parseInt(getBtnNo.style.left) + Math.random() * 15 + "rem";
  getBtnNo.style.top =
    parseInt(getBtnNo.style.top) + Math.random() * 15 + "rem";
};

const clickedBtnYes = () => {
  document.getElementById("yes-i-do").innerHTML = `Yes I Do üíï `;
};

// ------------------------------------ - ----------------------------------- */

//* 11. Vi·∫øt ch∆∞∆°ng tr√¨nh t√≠nh thu·∫ø thu nh·∫≠p c√° nh√¢n.

const getInCome = () => {
  // get thu nh·∫≠p t√≠nh thu·∫ø nh·∫≠p v√†o
  let inComeTaxes = document.getElementById("income-taxes").value;

  // b·∫≠c thu·∫ø
  let taxBracket;
  // Thu·∫ø su·∫•t
  let taxRate;
  // Thu·∫ø TNCN
  let tax;
  // Net income
  let netIncome;

  if (inComeTaxes.length == 0) {
    alert("Enter your Income Taxes!!!");
  } else if (inComeTaxes > 1000 && inComeTaxes <= 5000000) {
    taxBracket = 1;
    taxRate = 5;
  } else if (inComeTaxes > 5000000 && inComeTaxes <= 10000000) {
    taxBracket = 2;
    taxRate = 10;
  } else if (inComeTaxes > 10000000 && inComeTaxes <= 18000000) {
    taxBracket = 3;
    taxRate = 15;
  } else if (inComeTaxes > 18000000 && inComeTaxes <= 32000000) {
    taxBracket = 4;
    taxRate = 20;
  } else if (inComeTaxes > 32000000 && inComeTaxes <= 52000000) {
    taxBracket = 5;
    taxRate = 25;
  } else if (inComeTaxes > 52000000 && inComeTaxes <= 80000000) {
    taxBracket = 6;
    taxRate = 30;
  } else if (inComeTaxes > 80000000) {
    taxBracket = 7;
    taxRate = 35;
  } else {
    alert("Income Taxes must be greater 1000");
  }

  // Khai b√°o bi·∫øn format to VND
  let taxFormatVND;
  let netFormatVND;
  let incomeFormatVND;

  //? Thu·∫ø TNCN = Thu·∫ø su·∫•t / 100 * Thu nh·∫≠p t√≠nh thu·∫ø
  tax = (parseInt(taxRate) / 100) * parseInt(inComeTaxes);
  // Format to VND
  taxFormatVND = tax.toLocaleString("it-IT", {
    style: "currency",
    currency: "VND",
  });

  //? Th·ª±c l√£nh = Thu nh·∫≠p t√≠nh thu·∫ø - TNCN
  netIncome = inComeTaxes - tax;
  // Format to VND
  netFormatVND = netIncome.toLocaleString("it-IT", {
    style: "currency",
    currency: "VND",
  });

  // G√°n gi√° tr·ªã v√†o value c·ªßa Input
  incomeFormatVND = parseInt(inComeTaxes).toLocaleString("it-IT", {
    style: "currency",
    currency: "VND",
  });
  console.log(incomeFormatVND, netFormatVND);
  document.getElementById("income-taxes").value = incomeFormatVND;
  document.getElementById("tax-bracket").value = taxBracket;
  document.getElementById("tax-rate").value = `${taxRate}%`;
  document.getElementById("net-income").value = `${netFormatVND}`;
  document.getElementById("tax").innerHTML = `Your tax: ${taxFormatVND}`;
};

//! D√πng preventDefault() cho input type="submit"
document.getElementById("cal-taxes").addEventListener("click", function (e) {
  e.preventDefault();
});

// ------------------------------------ - ----------------------------------- */

//* 12. Vi·∫øt ch∆∞∆°ng tr√¨nh t√≠nh l√£i ng√¢n h√†ng (l√£i m·∫π ƒë·∫ª l√£i con) khi bi·∫øt s·ªë ti·ªÅn ban ƒë·∫ßu,
// s·ªë th√°ng cho vay v√† l√£i xu·∫•t h√†ng th√°ng.

// H√†m get Deposit Term, onchange khi thay ƒë·ªïi s·∫Ω l·∫•y gi√° tr·ªã thay ƒë·ªïi
const getDepositTerm = () => {
  // get value select
  let depositTerm = document.getElementById("select-term").value;
  // Khai b√°o bi·∫øn l√£i su·∫•t
  let depositInterest = 0;
  //? N·∫øu l√£i value deposti term = 1 ho·∫∑c = 2, th√¨ l√£i su·∫•t l√† 1.6%
  if (depositTerm == 30 || depositTerm == 60) {
    depositInterest = 1.6;
  } else if (depositTerm == 90) {
    depositInterest = 1.9;
  } else if (depositTerm == 180 || depositTerm == 270) {
    depositInterest = 2.9;
  } else if (depositTerm == 365) {
    depositInterest = 4.6;
  } else if (depositTerm != 0) {
    depositInterest = 4.7;
  }

  // g√°n v√†o value DIR (%)
  document.getElementById("deposit-interest-rate").value = depositInterest;
};

// h√†m check Unable edit deposit-interest-rate
const editDepositInterest = () => {
  let checkbox = document.getElementById("unableEdit-dir");
  let unableDIR = document.getElementById("deposit-interest-rate");

  // khi thay ƒë·ªïi check or no check, l·∫Øng nghe s·ª± ki·ªán thay ƒë·ªïi
  checkbox.addEventListener("change", (e) => {
    //? N·∫øu checked th√¨ disabled = false
    if (e.currentTarget.checked) {
      // unableDIR.removeAttribute("disabled");
      unableDIR.disabled = false;
    }
    //? N·∫øu no checked th√¨ disabled = true
    else {
      unableDIR.disabled = true;
    }
  });
};

// H√†m t√≠nh l√£i su·∫•t v√† th·ª±c nh·∫≠n sau k·ª≥ h·∫°n
const calDepositInterest = () => {
  // get gi√° tr·ªã depositTerm
  let depositTerm = document.getElementById("select-term").value;

  // get gi√° tr·ªã amount
  let depositAmount = document.getElementById("deposit-amount").value;

  // get gi√° tr·ªã DIR
  let getDepositInterest = document.getElementById(
    "deposit-interest-rate"
  ).value;

  // Khai b√°o bi·∫øn l√£i su·∫•t trong k·ª≥ h·∫°n
  let amountInterest;

  // Khai b√°o bi·∫øn t·ªïng nh·∫≠n trong k·ª≥ h·∫°n
  let totalAmount;

  // T√≠nh l√£i su·∫•t
  amountInterest =
    (((depositAmount * getDepositInterest) / 100) * depositTerm) / 365;

  // T√≠nh t·ªïng nh·∫≠n
  totalAmount = parseFloat(depositAmount) + parseFloat(amountInterest);

  //! toLocaleString(): ngƒÉn c√°ch h√†ng ng√†n, ch·ª•c, trƒÉm, ƒë∆°n v·ªã b·∫±ng d·∫•u ,
  let totalAmountVND = totalAmount.toLocaleString();
  let amountInterestVND = amountInterest.toLocaleString();
  let depositAmountVND = parseInt(depositAmount).toLocaleString();

  document.getElementById("total-amount").value = totalAmountVND;

  document.getElementById(
    "amount-interest"
  ).innerHTML = `Amount Interest: ${amountInterestVND} VND`;

  document.getElementById("deposit-amount").value = depositAmountVND;
};

function refresh() {
  let form = document.getElementById("formDepositInterest");
  form.reset();
}

//! D√πng preventDefault() cho input type="submit"
document.getElementById("cal-interest").addEventListener("click", function (e) {
  e.preventDefault();
});

//* -------------------------------------------------------------------------- */
//*                                    LOOP                                    */
//* -------------------------------------------------------------------------- */

//* 3. Th·ª±c h√†nh  Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠p v√†o m·ªôt s·ªë b·∫•t k·ª≥ l·ªõn h∆°n 0.
// T√≠nh t·ªïng c√°c ph·∫ßn t·ª≠ t·ª´ 1 ƒë·∫øn s·ªë v·ª´a nh·∫≠p v√†o.

const getIntegerNumber = () => {
  let integeNum = document.getElementById("enterIntegerNumber").value;

  let sum = 0;
  if (integeNum.length == 0) {
    alert("Enter Integer Number");
  } else {
    for (let i = 1; i <= parseInt(integeNum); i++) {
      sum += i;
    }
    console.log(sum);
    document.getElementById(
      "resultTotal"
    ).innerHTML = `Total <b>1 ‚Üí ${integeNum}</b> = <span style="color:red;font-weight:700">${sum}</span>`;
  }
};

//! D√πng preventDefault() cho input type="submit"
document
  .getElementById("cal-totalNumber")
  .addEventListener("click", function (e) {
    e.preventDefault();
  });

//* 4.1: Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n v√†o m·ªôt s·ªë t·ª´ h·ªôp tho·∫°i, vi·ªác nh·∫≠p k·∫øt th√∫c khi ng∆∞·ªùi d√πng nh·∫≠p v√†o gi√° tr·ªã -1.
// M·ªói gi√° tr·ªã nh·∫≠p ƒë∆∞·ª£c s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã ra v√† th·ª±c hi·ªán t√≠nh t·ªïng c√°c gi√° tr·ªã ƒë√≥.
// V√≠ d·ª•: Nh·∫≠p 2 => in ra 2, Nh·∫≠p ti·∫øp 5 => in ra 7 (2+5)
//TODO - S·ª≠ d·ª•ng While()
const getInputInNum = () => {
  // Khai b√°o bi·∫øn v√† nh·∫≠p s·ªë
  let inputNumIn = prompt("Enter a number: ");

  // Khai b√°o bi·∫øn t·ªïng
  let totalNum = 0;

  // n·∫øu nh·∫≠p -1 th√¨ k·∫øt th√∫c v√≤ng l·∫∑p
  while (inputNumIn != -1 && isNaN(inputNumIn) == false) {
    // Hi·ªÉn th·ªã d·ªØ li·ªáu v·ª´a nh·∫≠p b√™n tr√™n
    alert("Added: " + inputNumIn);

    // T√≠nh t·ªïng
    totalNum += parseInt(inputNumIn);

    // Hi·ªÉn th·ªã gi√° tr·ªã t·ªïng
    alert("Total = " + totalNum);

    // Sau ƒë√≥ ti·∫øp t·ª•c hi·ªÉn th·ªã h·ªôp tho·∫°i nh·∫≠p d·ªØ li·ªáu
    inputNumIn = prompt("Enter a number: ");
  }
  // Hi·ªÉn th·ªã t·ªïng cu·ªëi c√πng
  alert("Final Total = " + totalNum);
};

/* ------------------------------------ - ----------------------------------- */

//* 4.2: Vi·∫øt ch∆∞∆°ng h√¨nh hi·ªÉn th·ªã th·∫ª <hr> theo ƒë·ªô r·ªông t·ª´ 1 ƒë·∫øn 100.
// K·∫øt qu·∫£ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã h√¨nh tam gi√°c hr c√≥ ƒë·ªô d√†i t·ª´ 1 -> 100.
let i = 1;
let striangle = "";
const createStriangle = () => {
  while (i < 100) {
    striangle += `<hr style="width:${i}%;margin:2px 0">`;
    // console.log(striangle);
    document.getElementById("striangle").innerHTML = striangle;
    i++;
  }
};

/* ------------------------------------ - ----------------------------------- */

//* 6: T·∫°o m·ªôt table g·ªìm 10 d√≤ng v√† 10 c·ªôt.
// S·ª≠ d·ª•ng v√≤ng l·∫∑p l·ªìng nhau
let cell = "";
const createTable = () => {
  // Khai b√°o bi·∫øn ch·ª©a table
  cell = "<table border='1' width='300' cellspacing='0' cellpadding='3'>";

  for (i = 1; i <= 10; i++) {
    //! Th√™m <tr></tr> d∆∞·ªõi <table> ƒë·ªÉ t·∫°o row
    cell = cell + "<tr>";

    for (j = 1; j <= 10; j++) {
      //! trong row th√™m td ƒë·ªÉ t·∫°o d·ªØ li·ªáu
      cell = cell + "<td>" + i * j + "</td>";
    }
    // sau khi t·∫°o xong d·ªØ li·ªáu row ƒë√≥, th√™m th·∫ª ƒë√≥ng tr
    cell = cell + "</tr>";
  }
  // Khi ho√†n t·∫•t th√™m th·∫ª ƒë√≥ng table
  cell = cell + "</table>";
  document.getElementById("table10x10").innerHTML = cell;
};

//* -------------------------------------------------------------------------- */
//*                                    6. LOOP2                                */
//* -------------------------------------------------------------------------- */

/* ------------------------------------ - ----------------------------------- */

//* 1. Vi·∫øt m·ªôt ·ª©ng d·ª•ng ƒë·ªÉ in ra trang web m·ªôt b·∫£ng c·ª≠u ch∆∞∆°ng
const multiplicationTable = () => {
  cell = "<table   cellspacing='5' cellpadding='15'>";
  // i s·∫Ω l√† row => i s·∫Ω tƒÉng d·∫ßn t·ª´ 1 -> 9
  // ! ƒë·ªÉ i = 0 ƒë·ªÉ th·ª±c hi·ªán l√†m title cho bcc
  for (let i = 0; i <= 9; i++) {
    // t·∫°o th·∫ª tr
    cell += `<tr class="tr-${i}">`;

    // B·∫£ng c·ª≠u ch∆∞∆°ng b·∫Øt ƒë·∫ßu t·ª´ 2 -> j = 2, v√† k·∫øt th√∫c = 9
    for (let j = 2; j <= 9; j++) {
      // N·∫øu i == 0 th√¨ s·∫Ω th·ª±c hi·ªán l√†m ti√™u ƒë·ªÅ
      if (i == 0) {
        cell = cell + `<td class="td-${j}x">${j} x` + "</td>";
        document.getElementById("multiplicationTable").innerHTML = cell;
      } else {
        // Trong 1 h√†ng th√¨ s·∫Ω nh√¢n 1 ƒë·∫ßu ti√™n (i=1) v√† sau 9 l·∫ßn s·∫Ω tƒÉng i l√™n
        // V√† row th·ª© 2 s·∫Ω nh√¢n 2 ,...
        cell =
          cell +
          `<td class="td-${j}${i}">` +
          `${j} x ${i} = ` +
          j * i +
          "</td>";
      }
    }
    cell = cell + "</tr>";
  }
  cell = cell + "</table>";
  document.getElementById("multiplicationTable").innerHTML = cell;
};
